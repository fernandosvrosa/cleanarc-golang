// Code generated by MockGen. DO NOT EDIT.
// Source: domain/student/gateway/insert_student_gateway.go

// Package mock_gateway is a generated GoMock package.
package gateway

import (
	reflect "reflect"

	model "github.com/fernandosvrosa/cleanarc-golang/domain/student/model"
	gomock "github.com/golang/mock/gomock"
)

// MockInsertStudentGateway is a mock of InsertStudentGateway interface.
type MockInsertStudentGateway struct {
	ctrl     *gomock.Controller
	recorder *MockInsertStudentGatewayMockRecorder
}

// MockInsertStudentGatewayMockRecorder is the mock recorder for MockInsertStudentGateway.
type MockInsertStudentGatewayMockRecorder struct {
	mock *MockInsertStudentGateway
}

// NewMockInsertStudentGateway creates a new mock instance.
func NewMockInsertStudentGateway(ctrl *gomock.Controller) *MockInsertStudentGateway {
	mock := &MockInsertStudentGateway{ctrl: ctrl}
	mock.recorder = &MockInsertStudentGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockInsertStudentGateway) EXPECT() *MockInsertStudentGatewayMockRecorder {
	return m.recorder
}

// InsertStudent mocks base method.
func (m *MockInsertStudentGateway) InsertStudent(student model.Student) (model.Student, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertStudent", student)
	ret0, _ := ret[0].(model.Student)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// InsertStudent indicates an expected call of InsertStudent.
func (mr *MockInsertStudentGatewayMockRecorder) InsertStudent(student interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertStudent", reflect.TypeOf((*MockInsertStudentGateway)(nil).InsertStudent), student)
}
